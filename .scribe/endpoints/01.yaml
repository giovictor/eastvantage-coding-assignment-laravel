name: Roles
description: |-

  Endpoints for managing roles
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/roles
    metadata:
      groupName: Roles
      groupDescription: |-

        Endpoints for managing roles
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all roles'
      description: 'This endpoint will display all roles.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
           {
               id: 1,
               role: 'Author',
               created_at: '2024-03-09T18:05:06.000000Z',
               updated_at: '2024-03-09T18:05:06.000000Z'
           },
           {
               id: 2,
               role: 'Editor',
               created_at: '2024-03-09T18:05:06.000000Z',
               updated_at: '2024-03-09T18:05:06.000000Z'
           },

               id: 3,
               role: 'Subscriber',
               created_at: '2024-03-09T18:05:07.000000Z',
               updated_at: '2024-03-09T18:05:07.000000Z'
           },

               id: 4,
               role: 'Administrator',
               created_at: '2024-03-09T18:05:07.000000Z',
               updated_at: '2024-03-09T18:05:07.000000Z'
           },
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/roles
    metadata:
      groupName: Roles
      groupDescription: |-

        Endpoints for managing roles
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new role'
      description: 'This endpoint will create a new role.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role:
        name: role
        description: 'The name of the role.'
        required: true
        example: Moderator
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      role: Moderator
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
               message: 'Role has been created.',
               data: {
                   id: 5,
                   role: 'Moderator',
                   created_at: '2024-03-10T03:47:31.000000Z',
                   updated_at: '2024-03-10T03:47:31.000000Z'
               }
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/roles/{id}'
    metadata:
      groupName: Roles
      groupDescription: |-

        Endpoints for managing roles
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a role'
      description: 'This endpoint will retrieve a role by id.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               id: 5,
               role: 'Moderator',
               created_at: '2024-03-10T03:47:31.000000Z',
               updated_at: '2024-03-10T03:47:31.000000Z'
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/roles/{id}'
    metadata:
      groupName: Roles
      groupDescription: |-

        Endpoints for managing roles
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a role'
      description: 'This endpoint will update a role.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role:
        name: role
        description: 'The name of the role.'
        required: true
        example: Coordinator
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      role: Coordinator
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               message: 'Role has been updated.',
               data: {
                   id: 5,
                   role: 'Coordinator',
                   created_at: '2024-03-10T03:47:31.000000Z',
                   updated_at: '2024-03-10T03:47:31.000000Z'
               }
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/roles/{id}'
    metadata:
      groupName: Roles
      groupDescription: |-

        Endpoints for managing roles
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a role'
      description: 'This endpoint will delete a role. Deleting a role will also unassign it to users.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               message: 'Role has been deleted.'
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
